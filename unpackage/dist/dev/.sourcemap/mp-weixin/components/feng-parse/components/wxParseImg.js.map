{"version":3,"sources":["webpack:///E:/wamp/www/hi-hupai-wechat-pro/components/feng-parse/components/wxParseImg.vue?deae","webpack:///E:/wamp/www/hi-hupai-wechat-pro/components/feng-parse/components/wxParseImg.vue?9f05","webpack:///E:/wamp/www/hi-hupai-wechat-pro/components/feng-parse/components/wxParseImg.vue?f748","webpack:///E:/wamp/www/hi-hupai-wechat-pro/components/feng-parse/components/wxParseImg.vue?02bd","uni-app:///components/feng-parse/components/wxParseImg.vue"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuH;AACvH;AAC8D;AACL;;;AAGzD;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,yFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAomB,CAAgB,8nBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACexnB;AACA;AACA,oBAFA;AAGA,MAHA,kBAGA;AACA;AACA,qBADA;AAEA,mBAFA;AAGA,iBAHA;;AAKA,GATA;AAUA,wBAVA;AAWA,SAXA,qBAWA,EAXA;AAYA;AACA;AACA,kBADA;AAEA,aAFA,sBAEA;AACA;AACA,OAJA,EADA,EAZA;;;;;;;;;;;;;;;;;AAkCA;AACA,iBADA,yBACA,CADA,EACA;AACA,gCADA;AAEA,SAFA,GAEA,uBAFA,CAEA,GAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXA;AAYA;AACA,kBAbA,0BAaA,CAbA,EAaA;AACA,SADA,GACA,uBADA,CACA,GADA;AAEA,uBAFA;AAGA,iBAHA,CAGA,KAHA,gBAGA,KAHA,CAGA,MAHA,gBAGA,MAHA;;AAKA,qDALA;;AAOA,iBAPA,GAOA,KAPA,CAOA,WAPA,CAOA,UAPA,GAOA,KAPA,CAOA,UAPA;AAQA,oBARA,CAQA,OARA,mBAQA,OARA,CAQA,IARA,mBAQA,IARA,EAQA;AACA;AATA;AAWA,cAXA,GAWA,SAXA,CAWA,QAXA;AAYA;;AAEA;AACA,uJAfA,CAeA;AACA;AACA,KA9BA;AA+BA;AACA,kBAhCA,0BAgCA,aAhCA,EAgCA,cAhCA,EAgCA;AACA;AACA;AACA;;AAEA;AACA,WADA,GACA,cADA,CACA,GADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA;AACA;AACA;AACA,KA1DA,EAlCA,E","file":"components/feng-parse/components/wxParseImg.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./wxParseImg.vue?vue&type=template&id=dac99518&\"\nvar renderjs\nimport script from \"./wxParseImg.vue?vue&type=script&lang=js&\"\nexport * from \"./wxParseImg.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/feng-parse/components/wxParseImg.vue\"\nexport default component.exports","export * from \"-!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./wxParseImg.vue?vue&type=template&id=dac99518&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./wxParseImg.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!G:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./wxParseImg.vue?vue&type=script&lang=js&\"","<!--eslint-disable -->\n<template>\n  <image\n    mode=\"widthFix\"\n    :lazy-load=\"node.attr.lazyLoad\"\n    :class=\"node.classStr\"\n    :style=\"newStyleStr || node.styleStr\"\n    :data-src=\"node.attr.src\"\n    :src=\"node.attr.src\"\n    @tap=\"wxParseImgTap\"\n    @load=\"wxParseImgLoad\"\n  />\n</template>\n\n<script>\nexport default {\n  /* eslint-disable */\n  name: 'wxParseImg',\n  data() {\n    return {\n      newStyleStr: '',\n      preview: true,\n      dataUrl: '',\n    };\n  },\n  inject: ['parseWidth'],\n  mounted() {},\n  props: {\n    node: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  // #ifdef H5\n  created() {\n    if(this.node.tag === 'img' && this.node.attr.title) {\n      const id = parseInt(this.node.attr.title);\n      const attach = this.$store.getters['jv/get'](`attachments/${id}`);\n      if(attach) {\n        this.node.attr.src = attach.thumbUrl;\n        // this.node.attr.data_url = attach.url;\n        // this.dataUrl = attach.url;\n        console.log(this.node);\n      }\n    }\n  },\n  // #endif\n  methods: {\n    wxParseImgTap(e) {\n      if (!this.preview) return;\n      const { src } = e.currentTarget.dataset;\n      if (!src) return;\n      let parent = this.$parent;\n      while (!parent.preview || typeof parent.preview !== 'function') {\n        // TODO 遍历获取父节点执行方法\n        parent = parent.$parent;\n      }\n      parent.preview(src, e);\n    },\n    // 图片视觉宽高计算函数区\n    wxParseImgLoad(e) {\n      const { src } = e.currentTarget.dataset;\n      if (!src) return;\n      let { width, height } = e.mp.detail;\n\n      const recal = this.wxAutoImageCal(width, height);\n\n      const { imageheight, imageWidth } = recal;\n      const { padding, mode } = this.node.attr; // 删除padding\n      // const { mode } = this.node.attr;\n\n      const { styleStr } = this.node;\n      const imageHeightStyle = mode === 'widthFix' ? '' : `height: ${imageheight}px;`;\n\n      if (!styleStr)\n        this.newStyleStr = `${styleStr}; ${imageHeightStyle}; width: ${imageWidth}px; padding: 0 ${+padding}px;`; // 删除padding\n      // this.newStyleStr = `${styleStr}; ${imageHeightStyle}; width: ${imageWidth}px;`;\n    },\n    // 计算视觉优先的图片宽高\n    wxAutoImageCal(originalWidth, originalHeight) {\n      // 获取图片的原始长宽\n      const windowWidth = this.parseWidth.value;\n      const results = {};\n\n      if (originalWidth < 60 || originalHeight < 60) {\n        const { src } = this.node.attr;\n        let parent = this.$parent;\n        while (!parent.preview || typeof parent.preview !== 'function') {\n          parent = parent.$parent;\n        }\n        parent.removeImageUrl(src);\n        this.preview = false;\n      }\n\n      // 判断按照那种方式进行缩放\n      if (originalWidth > windowWidth) {\n        // 在图片width大于手机屏幕width时候\n        results.imageWidth = windowWidth;\n        results.imageheight = windowWidth * (originalHeight / originalWidth);\n      } else {\n        // 否则展示原来的数据\n        results.imageWidth = originalWidth;\n        results.imageheight = originalHeight;\n      }\n      return results;\n    },\n  },\n};\n</script>\n"],"sourceRoot":""}